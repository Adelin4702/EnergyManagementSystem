{"ast":null,"code":"import React from \"react\";\nimport { UI } from \"../UI.js\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the toolbar with the navigation button.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Nav(props) {\n  const {\n    onPreviousClick,\n    onNextClick,\n    previousMonth,\n    nextMonth,\n    ...navProps\n  } = props;\n  const {\n    components,\n    classNames,\n    labels: {\n      labelPrevious,\n      labelNext\n    }\n  } = useDayPicker();\n  return React.createElement(\"nav\", {\n    ...navProps\n  }, React.createElement(components.PreviousMonthButton, {\n    type: \"button\",\n    className: classNames[UI.PreviousMonthButton],\n    tabIndex: previousMonth ? undefined : -1,\n    disabled: previousMonth ? undefined : true,\n    \"aria-label\": labelPrevious(previousMonth),\n    onClick: props.onPreviousClick\n  }, React.createElement(components.Chevron, {\n    disabled: previousMonth ? undefined : true,\n    className: classNames[UI.Chevron],\n    orientation: \"left\"\n  })), React.createElement(components.NextMonthButton, {\n    type: \"button\",\n    className: classNames[UI.NextMonthButton],\n    tabIndex: nextMonth ? undefined : -1,\n    disabled: nextMonth ? undefined : true,\n    \"aria-label\": labelNext(nextMonth),\n    onClick: props.onNextClick\n  }, React.createElement(components.Chevron, {\n    disabled: nextMonth ? undefined : true,\n    orientation: \"right\",\n    className: classNames[UI.Chevron]\n  })));\n}","map":{"version":3,"names":["React","UI","useDayPicker","Nav","props","onPreviousClick","onNextClick","previousMonth","nextMonth","navProps","components","classNames","labels","labelPrevious","labelNext","createElement","PreviousMonthButton","type","className","tabIndex","undefined","disabled","onClick","Chevron","orientation","NextMonthButton"],"sources":["C:\\Users\\prico\\OneDrive\\Desktop\\Faculta\\SD\\Assignment_3\\react-demo\\node_modules\\react-day-picker\\src\\components\\Nav.tsx"],"sourcesContent":["import React, { MouseEventHandler } from \"react\";\n\nimport { UI } from \"../UI.js\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n\n/**\n * Render the toolbar with the navigation button.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Nav(\n  props: {\n    onPreviousClick?: MouseEventHandler<HTMLButtonElement>;\n    onNextClick?: MouseEventHandler<HTMLButtonElement>;\n    previousMonth?: Date | undefined;\n    nextMonth?: Date | undefined;\n  } & JSX.IntrinsicElements[\"nav\"]\n) {\n  const {\n    onPreviousClick,\n    onNextClick,\n    previousMonth,\n    nextMonth,\n    ...navProps\n  } = props;\n\n  const {\n    components,\n    classNames,\n    labels: { labelPrevious, labelNext }\n  } = useDayPicker();\n\n  return (\n    <nav {...navProps}>\n      <components.PreviousMonthButton\n        type=\"button\"\n        className={classNames[UI.PreviousMonthButton]}\n        tabIndex={previousMonth ? undefined : -1}\n        disabled={previousMonth ? undefined : true}\n        aria-label={labelPrevious(previousMonth)}\n        onClick={props.onPreviousClick}\n      >\n        <components.Chevron\n          disabled={previousMonth ? undefined : true}\n          className={classNames[UI.Chevron]}\n          orientation=\"left\"\n        />\n      </components.PreviousMonthButton>\n      <components.NextMonthButton\n        type=\"button\"\n        className={classNames[UI.NextMonthButton]}\n        tabIndex={nextMonth ? undefined : -1}\n        disabled={nextMonth ? undefined : true}\n        aria-label={labelNext(nextMonth)}\n        onClick={props.onNextClick}\n      >\n        <components.Chevron\n          disabled={nextMonth ? undefined : true}\n          orientation=\"right\"\n          className={classNames[UI.Chevron]}\n        />\n      </components.NextMonthButton>\n    </nav>\n  );\n}\n\nexport type NavProps = Parameters<typeof Nav>[0];\n"],"mappings":"AAAA,OAAOA,KAA4B,MAAM,OAAO;AAEhD,SAASC,EAAE,QAAQ,UAAU;AAC7B,SAASC,YAAY,QAAQ,oBAAoB;AAEjD;;;;;;AAMA,OAAM,SAAUC,GAAGA,CACjBC,KAKgC;EAEhC,MAAM;IACJC,eAAe;IACfC,WAAW;IACXC,aAAa;IACbC,SAAS;IACT,GAAGC;EAAQ,CACZ,GAAGL,KAAK;EAET,MAAM;IACJM,UAAU;IACVC,UAAU;IACVC,MAAM,EAAE;MAAEC,aAAa;MAAEC;IAAS;EAAE,CACrC,GAAGZ,YAAY,EAAE;EAElB,OACEF,KAAA,CAAAe,aAAA;IAAA,GAASN;EAAQ,GACfT,KAAA,CAAAe,aAAA,CAACL,UAAU,CAACM,mBAAmB;IAC7BC,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAEP,UAAU,CAACV,EAAE,CAACe,mBAAmB,CAAC;IAC7CG,QAAQ,EAAEZ,aAAa,GAAGa,SAAS,GAAG,CAAC,CAAC;IACxCC,QAAQ,EAAEd,aAAa,GAAGa,SAAS,GAAG,IAAI;IAAA,cAC9BP,aAAa,CAACN,aAAa,CAAC;IACxCe,OAAO,EAAElB,KAAK,CAACC;EAAe,GAE9BL,KAAA,CAAAe,aAAA,CAACL,UAAU,CAACa,OAAO;IACjBF,QAAQ,EAAEd,aAAa,GAAGa,SAAS,GAAG,IAAI;IAC1CF,SAAS,EAAEP,UAAU,CAACV,EAAE,CAACsB,OAAO,CAAC;IACjCC,WAAW,EAAC;EAAM,EAClB,CAC6B,EACjCxB,KAAA,CAAAe,aAAA,CAACL,UAAU,CAACe,eAAe;IACzBR,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAEP,UAAU,CAACV,EAAE,CAACwB,eAAe,CAAC;IACzCN,QAAQ,EAAEX,SAAS,GAAGY,SAAS,GAAG,CAAC,CAAC;IACpCC,QAAQ,EAAEb,SAAS,GAAGY,SAAS,GAAG,IAAI;IAAA,cAC1BN,SAAS,CAACN,SAAS,CAAC;IAChCc,OAAO,EAAElB,KAAK,CAACE;EAAW,GAE1BN,KAAA,CAAAe,aAAA,CAACL,UAAU,CAACa,OAAO;IACjBF,QAAQ,EAAEb,SAAS,GAAGY,SAAS,GAAG,IAAI;IACtCI,WAAW,EAAC,OAAO;IACnBN,SAAS,EAAEP,UAAU,CAACV,EAAE,CAACsB,OAAO;EAAC,EACjC,CACyB,CACzB;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}