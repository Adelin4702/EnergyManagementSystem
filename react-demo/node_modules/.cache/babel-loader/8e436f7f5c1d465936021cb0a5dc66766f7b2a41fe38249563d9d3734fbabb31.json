{"ast":null,"code":"/** Return the years to show in the dropdown. */\nexport function getYearOptions(displayMonth, calendarStart, calendarEnd, formatters, dateLib) {\n  if (!calendarStart) return undefined;\n  if (!calendarEnd) return undefined;\n  const {\n    startOfMonth,\n    startOfYear,\n    endOfYear,\n    addYears,\n    isBefore,\n    isSameYear\n  } = dateLib;\n  const month = displayMonth.getMonth();\n  const firstNavYear = startOfYear(calendarStart);\n  const lastNavYear = endOfYear(calendarEnd);\n  const years = [];\n  let year = firstNavYear;\n  while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n    years.push(year.getFullYear());\n    year = addYears(year, 1);\n  }\n  return years.map(value => {\n    const year = dateLib.Date ? new dateLib.Date(value, month) : new Date(value, month);\n    const disabled = calendarStart && year < startOfMonth(calendarStart) || month && calendarEnd && year > startOfMonth(calendarEnd) || false;\n    const label = formatters.formatYearDropdown(value);\n    return {\n      value,\n      label,\n      disabled\n    };\n  });\n}","map":{"version":3,"names":["getYearOptions","displayMonth","calendarStart","calendarEnd","formatters","dateLib","undefined","startOfMonth","startOfYear","endOfYear","addYears","isBefore","isSameYear","month","getMonth","firstNavYear","lastNavYear","years","year","push","getFullYear","map","value","Date","disabled","label","formatYearDropdown"],"sources":["C:\\Users\\prico\\OneDrive\\Desktop\\Faculta\\SD\\Assignment_3\\react-demo\\node_modules\\react-day-picker\\src\\helpers\\getYearOptions.ts"],"sourcesContent":["import type { DateLib } from \"../classes/DateLib.js\";\nimport { DropdownOption } from \"../components/Dropdown.js\";\nimport type { Formatters } from \"../types/index.js\";\n\n/** Return the years to show in the dropdown. */\nexport function getYearOptions(\n  displayMonth: Date,\n  calendarStart: Date | undefined,\n  calendarEnd: Date | undefined,\n  formatters: Pick<Formatters, \"formatYearDropdown\">,\n  dateLib: DateLib\n): DropdownOption[] | undefined {\n  if (!calendarStart) return undefined;\n  if (!calendarEnd) return undefined;\n  const {\n    startOfMonth,\n    startOfYear,\n    endOfYear,\n    addYears,\n    isBefore,\n    isSameYear\n  } = dateLib;\n  const month = displayMonth.getMonth();\n  const firstNavYear = startOfYear(calendarStart);\n  const lastNavYear = endOfYear(calendarEnd);\n  const years: number[] = [];\n\n  let year = firstNavYear;\n  while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n    years.push(year.getFullYear());\n    year = addYears(year, 1);\n  }\n\n  return years.map((value) => {\n    const year = dateLib.Date\n      ? new dateLib.Date(value, month)\n      : new Date(value, month);\n    const disabled =\n      (calendarStart && year < startOfMonth(calendarStart)) ||\n      (month && calendarEnd && year > startOfMonth(calendarEnd)) ||\n      false;\n    const label = formatters.formatYearDropdown(value);\n    return {\n      value,\n      label,\n      disabled\n    };\n  });\n}\n"],"mappings":"AAIA;AACA,OAAM,SAAUA,cAAcA,CAC5BC,YAAkB,EAClBC,aAA+B,EAC/BC,WAA6B,EAC7BC,UAAkD,EAClDC,OAAgB;EAEhB,IAAI,CAACH,aAAa,EAAE,OAAOI,SAAS;EACpC,IAAI,CAACH,WAAW,EAAE,OAAOG,SAAS;EAClC,MAAM;IACJC,YAAY;IACZC,WAAW;IACXC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRC;EAAU,CACX,GAAGP,OAAO;EACX,MAAMQ,KAAK,GAAGZ,YAAY,CAACa,QAAQ,EAAE;EACrC,MAAMC,YAAY,GAAGP,WAAW,CAACN,aAAa,CAAC;EAC/C,MAAMc,WAAW,GAAGP,SAAS,CAACN,WAAW,CAAC;EAC1C,MAAMc,KAAK,GAAa,EAAE;EAE1B,IAAIC,IAAI,GAAGH,YAAY;EACvB,OAAOJ,QAAQ,CAACO,IAAI,EAAEF,WAAW,CAAC,IAAIJ,UAAU,CAACM,IAAI,EAAEF,WAAW,CAAC,EAAE;IACnEC,KAAK,CAACE,IAAI,CAACD,IAAI,CAACE,WAAW,EAAE,CAAC;IAC9BF,IAAI,GAAGR,QAAQ,CAACQ,IAAI,EAAE,CAAC,CAAC;EAC1B;EAEA,OAAOD,KAAK,CAACI,GAAG,CAAEC,KAAK,IAAI;IACzB,MAAMJ,IAAI,GAAGb,OAAO,CAACkB,IAAI,GACrB,IAAIlB,OAAO,CAACkB,IAAI,CAACD,KAAK,EAAET,KAAK,CAAC,GAC9B,IAAIU,IAAI,CAACD,KAAK,EAAET,KAAK,CAAC;IAC1B,MAAMW,QAAQ,GACXtB,aAAa,IAAIgB,IAAI,GAAGX,YAAY,CAACL,aAAa,CAAC,IACnDW,KAAK,IAAIV,WAAW,IAAIe,IAAI,GAAGX,YAAY,CAACJ,WAAW,CAAE,IAC1D,KAAK;IACP,MAAMsB,KAAK,GAAGrB,UAAU,CAACsB,kBAAkB,CAACJ,KAAK,CAAC;IAClD,OAAO;MACLA,KAAK;MACLG,KAAK;MACLD;KACD;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}