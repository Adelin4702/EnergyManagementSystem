{"ast":null,"code":"import { defaultLocale } from \"../classes/DateLib.js\";\n/** Return the months to show in the dropdown. */\nexport function getMonthOptions(displayMonth, navStart, navEnd, formatters, dateLib) {\n  if (!navStart) return undefined;\n  if (!navEnd) return undefined;\n  const {\n    addMonths,\n    startOfMonth,\n    isBefore\n  } = dateLib;\n  const year = displayMonth.getFullYear();\n  const months = [];\n  let month = navStart;\n  while (months.length < 12 && isBefore(month, addMonths(navEnd, 1))) {\n    months.push(month.getMonth());\n    month = addMonths(month, 1);\n  }\n  const sortedMonths = months.sort((a, b) => {\n    return a - b;\n  });\n  const options = sortedMonths.map(value => {\n    const label = formatters.formatMonthDropdown(value, dateLib.options.locale ?? defaultLocale);\n    const month = dateLib.Date ? new dateLib.Date(year, value) : new Date(year, value);\n    const disabled = navStart && month < startOfMonth(navStart) || navEnd && month > startOfMonth(navEnd) || false;\n    return {\n      value,\n      label,\n      disabled\n    };\n  });\n  return options;\n}","map":{"version":3,"names":["defaultLocale","getMonthOptions","displayMonth","navStart","navEnd","formatters","dateLib","undefined","addMonths","startOfMonth","isBefore","year","getFullYear","months","month","length","push","getMonth","sortedMonths","sort","a","b","options","map","value","label","formatMonthDropdown","locale","Date","disabled"],"sources":["C:\\Users\\prico\\OneDrive\\Desktop\\Faculta\\SD\\Assignment_3\\react-demo\\node_modules\\react-day-picker\\src\\helpers\\getMonthOptions.ts"],"sourcesContent":["import { defaultLocale, type DateLib } from \"../classes/DateLib.js\";\nimport { DropdownOption } from \"../components/Dropdown.js\";\nimport type { Formatters } from \"../types/index.js\";\n\n/** Return the months to show in the dropdown. */\nexport function getMonthOptions(\n  displayMonth: Date,\n  navStart: Date | undefined,\n  navEnd: Date | undefined,\n  formatters: Pick<Formatters, \"formatMonthDropdown\">,\n  dateLib: DateLib\n): DropdownOption[] | undefined {\n  if (!navStart) return undefined;\n  if (!navEnd) return undefined;\n\n  const { addMonths, startOfMonth, isBefore } = dateLib;\n  const year = displayMonth.getFullYear();\n\n  const months: number[] = [];\n  let month = navStart;\n  while (months.length < 12 && isBefore(month, addMonths(navEnd, 1))) {\n    months.push(month.getMonth());\n    month = addMonths(month, 1);\n  }\n  const sortedMonths = months.sort((a, b) => {\n    return a - b;\n  });\n  const options = sortedMonths.map((value) => {\n    const label = formatters.formatMonthDropdown(\n      value,\n      dateLib.options.locale ?? defaultLocale\n    );\n    const month = dateLib.Date\n      ? new dateLib.Date(year, value)\n      : new Date(year, value);\n    const disabled =\n      (navStart && month < startOfMonth(navStart)) ||\n      (navEnd && month > startOfMonth(navEnd)) ||\n      false;\n    return { value, label, disabled };\n  });\n\n  return options;\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAsB,uBAAuB;AAInE;AACA,OAAM,SAAUC,eAAeA,CAC7BC,YAAkB,EAClBC,QAA0B,EAC1BC,MAAwB,EACxBC,UAAmD,EACnDC,OAAgB;EAEhB,IAAI,CAACH,QAAQ,EAAE,OAAOI,SAAS;EAC/B,IAAI,CAACH,MAAM,EAAE,OAAOG,SAAS;EAE7B,MAAM;IAAEC,SAAS;IAAEC,YAAY;IAAEC;EAAQ,CAAE,GAAGJ,OAAO;EACrD,MAAMK,IAAI,GAAGT,YAAY,CAACU,WAAW,EAAE;EAEvC,MAAMC,MAAM,GAAa,EAAE;EAC3B,IAAIC,KAAK,GAAGX,QAAQ;EACpB,OAAOU,MAAM,CAACE,MAAM,GAAG,EAAE,IAAIL,QAAQ,CAACI,KAAK,EAAEN,SAAS,CAACJ,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE;IAClES,MAAM,CAACG,IAAI,CAACF,KAAK,CAACG,QAAQ,EAAE,CAAC;IAC7BH,KAAK,GAAGN,SAAS,CAACM,KAAK,EAAE,CAAC,CAAC;EAC7B;EACA,MAAMI,YAAY,GAAGL,MAAM,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;IACxC,OAAOD,CAAC,GAAGC,CAAC;EACd,CAAC,CAAC;EACF,MAAMC,OAAO,GAAGJ,YAAY,CAACK,GAAG,CAAEC,KAAK,IAAI;IACzC,MAAMC,KAAK,GAAGpB,UAAU,CAACqB,mBAAmB,CAC1CF,KAAK,EACLlB,OAAO,CAACgB,OAAO,CAACK,MAAM,IAAI3B,aAAa,CACxC;IACD,MAAMc,KAAK,GAAGR,OAAO,CAACsB,IAAI,GACtB,IAAItB,OAAO,CAACsB,IAAI,CAACjB,IAAI,EAAEa,KAAK,CAAC,GAC7B,IAAII,IAAI,CAACjB,IAAI,EAAEa,KAAK,CAAC;IACzB,MAAMK,QAAQ,GACX1B,QAAQ,IAAIW,KAAK,GAAGL,YAAY,CAACN,QAAQ,CAAC,IAC1CC,MAAM,IAAIU,KAAK,GAAGL,YAAY,CAACL,MAAM,CAAE,IACxC,KAAK;IACP,OAAO;MAAEoB,KAAK;MAAEC,KAAK;MAAEI;IAAQ,CAAE;EACnC,CAAC,CAAC;EAEF,OAAOP,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}