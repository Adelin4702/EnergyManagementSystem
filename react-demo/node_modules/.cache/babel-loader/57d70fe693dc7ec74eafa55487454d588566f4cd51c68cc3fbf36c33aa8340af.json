{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{Client,Stomp}from'@stomp/stompjs';import logo from'./commons/images/icon.png';import bellIcon from'./commons/images/bell-icon.png';// Bell icon for notifications\nimport chatIcon from'./commons/images/chat-icon.png';// Bell icon for notifications\nimport userIcon from'./commons/images/user-icon.png';import{jwtDecode}from'jwt-decode';import{DropdownItem,DropdownMenu,DropdownToggle,Nav,Navbar,NavbarBrand,NavLink,UncontrolledDropdown,Button,Badge}from'reactstrap';import{withRouter}from'react-router-dom';import'./commons/styles/project-style.module.css';import styles from'react-day-picker/style.css';import style from'./commons/styles/project-style.module.css';import SockJS from\"sockjs-client\";//import Stomp from \"stompjs\";\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const textStyle={color:'white',textDecoration:'none'};const NavigationBar=props=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const[userName,setUserName]=useState('');const[isAdmin,setIsAdmin]=useState(false);const[notifications,setNotifications]=useState([]);const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState(\"\");const personId=sessionStorage.getItem('personId');// Retrieve person ID from session storage\nconst websocketUrl='http://localhost:80/api-monitor/ws';useEffect(()=>{checkLoginStatus();if(isLoggedIn&&personId){setupWebSocketConnection(personId);}},[isLoggedIn,personId]);const checkLoginStatus=()=>{const token=sessionStorage.getItem('jwt');if(token){setIsLoggedIn(true);const decodedToken=jwtDecode(token);setUserName(decodedToken.username||'User');setIsAdmin(decodedToken.admin);}};const setupWebSocketConnection=personId=>{const client=new Client({brokerURL:websocketUrl,reconnectDelay:5000,debug:str=>console.log(str)});client.onConnect=()=>{console.log(`Connected to WebSocket for person ID: ${personId}`);// Subscribe to a unique topic for each personId\nclient.subscribe(`/topic/alert/${personId}`,message=>{const messageData=message.body;setNotifications(prevNotifications=>[...prevNotifications,messageData]);});};client.onStompError=frame=>{console.error(`STOMP error for person ID ${personId}:`,frame);};client.activate();return()=>{client.deactivate();};};const useWebSocket=(personId,onMessageReceived)=>{const stompClient=useRef(null);useEffect(()=>{// Connect to the WebSocket endpoint\nconst socket=new SockJS(\"http://localhost:80/api-chat/ws\");stompClient.current=Stomp.over(socket);stompClient.current.connect({},frame=>{console.log(\"Connected: \"+frame);// Subscribe to the user-specific topic\nstompClient.current.subscribe(`/topic/chat/${personId}`,message=>{onMessageReceived(JSON.parse(message.body));console.log(\"mesaj primit \",message.body);});});return()=>{if(stompClient.current){stompClient.current.disconnect();}};},[personId,onMessageReceived]);// Function to send a message\nconst sendMessage=message=>{if(stompClient.current&&stompClient.current.connected){stompClient.current.send(`/app/sendMessage/${personId}`,{},JSON.stringify(message));}};return{sendMessage};};// Define a callback to handle incoming messages\nconst handleIncomingMessage=newMessage=>{setMessages(prevMessages=>[...prevMessages,newMessage]);};// Use the custom hook\nconst{sendMessage}=useWebSocket(personId,handleIncomingMessage);const handleSendMessage=()=>{if(inputMessage.trim()){const message={senderId:personId,content:inputMessage,timestamp:new Date().toISOString()};sendMessage(message);// Call the sendMessage function from the hook\nsetInputMessage(\"\");// Clear the input field after sending\n}};const navigateToLogin=()=>{props.history.push('/auth/login');checkLoginStatus();};const logOff=()=>{sessionStorage.removeItem('jwt');sessionStorage.removeItem('role');sessionStorage.removeItem('personId');setIsLoggedIn(false);setUserName('');setIsAdmin(false);setNotifications([]);setMessages([]);props.history.push('/');};// Function to remove notification by index\nconst removeNotification=index=>{setNotifications(prevNotifications=>prevNotifications.filter((_,i)=>i!==index));};const removeChat=index=>{setMessages(prevChat=>prevChat.filter((_,i)=>i!==index));};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Navbar,{color:\"dark\",light:true,expand:\"md\",children:[/*#__PURE__*/_jsx(NavbarBrand,{href:\"/\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,width:\"35\",height:\"35\",alt:\"Logo\",className:style.imageLogo})}),/*#__PURE__*/_jsx(Nav,{className:\"navbar-nav mr-auto\",navbar:true,children:/*#__PURE__*/_jsxs(UncontrolledDropdown,{nav:true,inNavbar:true,className:styles.dropdown,children:[/*#__PURE__*/_jsx(DropdownToggle,{style:textStyle,nav:true,caret:true,children:\"Menu\"}),/*#__PURE__*/_jsx(DropdownMenu,{left:true,children:isAdmin?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DropdownItem,{children:/*#__PURE__*/_jsx(NavLink,{href:\"/person\",children:\"Persons\"})}),/*#__PURE__*/_jsx(DropdownItem,{children:/*#__PURE__*/_jsx(NavLink,{href:\"/device\",children:\"Devices\"})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DropdownItem,{children:/*#__PURE__*/_jsx(NavLink,{href:\"/myDevice\",children:\"My Devices\"})}),/*#__PURE__*/_jsx(DropdownItem,{children:/*#__PURE__*/_jsx(NavLink,{href:\"/ws\",children:\"Statistics(WS)\"})})]})})]})}),/*#__PURE__*/_jsxs(Nav,{className:\"navbar-nav\",children:[/*#__PURE__*/_jsxs(UncontrolledDropdown,{nav:true,inNavbar:true,children:[/*#__PURE__*/_jsxs(DropdownToggle,{nav:true,caret:true,style:{color:'white'},children:[/*#__PURE__*/_jsx(\"img\",{src:chatIcon,width:\"30\",height:\"30\",alt:\"Chat\",style:{marginRight:'10px'}}),messages.length>0&&/*#__PURE__*/_jsx(Badge,{color:\"danger\",pill:true,children:messages.length})]}),/*#__PURE__*/_jsx(DropdownMenu,{right:true,children:messages.length>0?messages.map((notif,index)=>/*#__PURE__*/_jsxs(DropdownItem,{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:notif}),/*#__PURE__*/_jsx(Button,{className:style.notifDeleteButton,onClick:()=>removeChat(index),children:\"X\"})]},index)):/*#__PURE__*/_jsx(DropdownItem,{children:\"No new chats\"})})]}),/*#__PURE__*/_jsxs(UncontrolledDropdown,{nav:true,inNavbar:true,children:[/*#__PURE__*/_jsxs(DropdownToggle,{nav:true,caret:true,style:{color:'white'},children:[/*#__PURE__*/_jsx(\"img\",{src:bellIcon,width:\"30\",height:\"30\",alt:\"Notifications\",style:{marginRight:'10px'}}),notifications.length>0&&/*#__PURE__*/_jsx(Badge,{color:\"danger\",pill:true,children:notifications.length})]}),/*#__PURE__*/_jsx(DropdownMenu,{right:true,children:notifications.length>0?notifications.map((notif,index)=>/*#__PURE__*/_jsxs(DropdownItem,{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:notif}),/*#__PURE__*/_jsx(Button,{className:style.notifDeleteButton,onClick:()=>removeNotification(index),children:\"X\"})]},index)):/*#__PURE__*/_jsx(DropdownItem,{children:\"No new notifications\"})})]}),isLoggedIn?/*#__PURE__*/_jsxs(UncontrolledDropdown,{nav:true,inNavbar:true,children:[/*#__PURE__*/_jsxs(DropdownToggle,{nav:true,caret:true,style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"img\",{src:userIcon,width:\"30\",height:\"30\",alt:\"User Icon\",style:{marginRight:'10px'}}),/*#__PURE__*/_jsxs(\"span\",{style:{color:'white'},children:[userName,\" \",isAdmin?\"(Admin)\":\"(Client)\"]})]}),/*#__PURE__*/_jsx(DropdownMenu,{right:true,children:/*#__PURE__*/_jsx(DropdownItem,{onClick:logOff,children:\"Log out\"})})]}):/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:navigateToLogin,style:{marginLeft:'10px'},children:\"Log In\"})]})]})});};export default withRouter(NavigationBar);","map":{"version":3,"names":["React","useEffect","useState","useRef","Client","Stomp","logo","bellIcon","chatIcon","userIcon","jwtDecode","DropdownItem","DropdownMenu","DropdownToggle","Nav","Navbar","NavbarBrand","NavLink","UncontrolledDropdown","Button","Badge","withRouter","styles","style","SockJS","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","textStyle","color","textDecoration","NavigationBar","props","isLoggedIn","setIsLoggedIn","userName","setUserName","isAdmin","setIsAdmin","notifications","setNotifications","messages","setMessages","inputMessage","setInputMessage","personId","sessionStorage","getItem","websocketUrl","checkLoginStatus","setupWebSocketConnection","token","decodedToken","username","admin","client","brokerURL","reconnectDelay","debug","str","console","log","onConnect","subscribe","message","messageData","body","prevNotifications","onStompError","frame","error","activate","deactivate","useWebSocket","onMessageReceived","stompClient","socket","current","over","connect","JSON","parse","disconnect","sendMessage","connected","send","stringify","handleIncomingMessage","newMessage","prevMessages","handleSendMessage","trim","senderId","content","timestamp","Date","toISOString","navigateToLogin","history","push","logOff","removeItem","removeNotification","index","filter","_","i","removeChat","prevChat","children","light","expand","href","src","width","height","alt","className","imageLogo","navbar","nav","inNavbar","dropdown","caret","left","marginRight","length","pill","right","map","notif","display","justifyContent","alignItems","notifDeleteButton","onClick","marginLeft"],"sources":["C:/Users/prico/OneDrive/Desktop/Faculta/SD/Assignment_3/react-demo/src/navigation-bar.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Client, Stomp } from '@stomp/stompjs';\r\nimport logo from './commons/images/icon.png';\r\nimport bellIcon from './commons/images/bell-icon.png'; // Bell icon for notifications\r\nimport chatIcon from './commons/images/chat-icon.png'; // Bell icon for notifications\r\nimport userIcon from './commons/images/user-icon.png';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport {\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    Button,\r\n    Badge} from 'reactstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './commons/styles/project-style.module.css';\r\nimport styles from 'react-day-picker/style.css';\r\nimport style from './commons/styles/project-style.module.css';\r\nimport SockJS from \"sockjs-client\";\r\n//import Stomp from \"stompjs\";\r\n\r\nconst textStyle = {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n};\r\n\r\nconst NavigationBar = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState(\"\");\r\n\r\n    const personId = sessionStorage.getItem('personId'); // Retrieve person ID from session storage\r\n    const websocketUrl = 'http://localhost:80/api-monitor/ws';\r\n\r\n    useEffect(() => {\r\n        checkLoginStatus();\r\n        if (isLoggedIn && personId) {\r\n            setupWebSocketConnection(personId);\r\n        }\r\n    }, [isLoggedIn, personId]);\r\n\r\n    const checkLoginStatus = () => {\r\n        const token = sessionStorage.getItem('jwt');\r\n        if (token) {\r\n            setIsLoggedIn(true);\r\n            const decodedToken = jwtDecode(token);\r\n            setUserName(decodedToken.username || 'User');\r\n            setIsAdmin(decodedToken.admin);\r\n        }\r\n    };\r\n\r\n    const setupWebSocketConnection = (personId) => {\r\n        const client = new Client({\r\n            brokerURL: websocketUrl,\r\n            reconnectDelay: 5000,\r\n            debug: (str) => console.log(str),\r\n        });\r\n\r\n        client.onConnect = () => {\r\n            console.log(`Connected to WebSocket for person ID: ${personId}`);\r\n\r\n            // Subscribe to a unique topic for each personId\r\n            client.subscribe(`/topic/alert/${personId}`, (message) => {\r\n                const messageData = message.body;\r\n                setNotifications((prevNotifications) => [...prevNotifications, messageData]);\r\n            });\r\n        };\r\n\r\n        client.onStompError = (frame) => {\r\n            console.error(`STOMP error for person ID ${personId}:`, frame);\r\n        };\r\n\r\n        client.activate();\r\n\r\n        return () => {\r\n            client.deactivate();\r\n        };\r\n    };\r\n\r\n    const useWebSocket = (personId, onMessageReceived) => {\r\n        const stompClient = useRef(null);\r\n    \r\n        useEffect(() => {\r\n            // Connect to the WebSocket endpoint\r\n            const socket = new SockJS(\"http://localhost:80/api-chat/ws\");\r\n            stompClient.current = Stomp.over(socket);\r\n    \r\n            stompClient.current.connect({}, (frame) => {\r\n                console.log(\"Connected: \" + frame);\r\n    \r\n                // Subscribe to the user-specific topic\r\n                stompClient.current.subscribe(`/topic/chat/${personId}`, (message) => {\r\n                    onMessageReceived(JSON.parse(message.body));\r\n                    console.log(\"mesaj primit \", message.body);\r\n                });\r\n            });\r\n    \r\n            return () => {\r\n                if (stompClient.current) {\r\n                    stompClient.current.disconnect();\r\n                }\r\n            };\r\n        }, [personId, onMessageReceived]);\r\n    \r\n        // Function to send a message\r\n        const sendMessage = (message) => {\r\n            if (stompClient.current && stompClient.current.connected) {\r\n                stompClient.current.send(\r\n                    `/app/sendMessage/${personId}`,\r\n                    {},\r\n                    JSON.stringify(message)\r\n                );\r\n            }\r\n        };\r\n    \r\n        return { sendMessage };\r\n    };\r\n\r\n\r\n\r\n    // Define a callback to handle incoming messages\r\n    const handleIncomingMessage = (newMessage) => {\r\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n    };\r\n\r\n    // Use the custom hook\r\n    const { sendMessage } = useWebSocket(personId, handleIncomingMessage);\r\n\r\n    const handleSendMessage = () => {\r\n        if (inputMessage.trim()) {\r\n            const message = {\r\n                senderId: personId,\r\n                content: inputMessage,\r\n                timestamp: new Date().toISOString(),\r\n            };\r\n\r\n            sendMessage(message); // Call the sendMessage function from the hook\r\n            setInputMessage(\"\"); // Clear the input field after sending\r\n        }\r\n    }\r\n    \r\n\r\n    const navigateToLogin = () => {\r\n        props.history.push('/auth/login');\r\n        checkLoginStatus();\r\n    };\r\n\r\n    const logOff = () => {\r\n        sessionStorage.removeItem('jwt');\r\n        sessionStorage.removeItem('role');\r\n        sessionStorage.removeItem('personId');\r\n        setIsLoggedIn(false);\r\n        setUserName('');\r\n        setIsAdmin(false);\r\n        setNotifications([]);\r\n        setMessages([]);\r\n        props.history.push('/');\r\n    };\r\n\r\n    // Function to remove notification by index\r\n    const removeNotification = (index) => {\r\n        setNotifications((prevNotifications) => prevNotifications.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const removeChat = (index) => {\r\n        setMessages((prevChat) => prevChat.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"dark\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\">\r\n                    <img src={logo} width={\"35\"} height={\"35\"} alt=\"Logo\" className={style.imageLogo} />\r\n                </NavbarBrand>\r\n                <Nav className=\"navbar-nav mr-auto\" navbar>\r\n                    <UncontrolledDropdown nav inNavbar className={styles.dropdown}>\r\n                        <DropdownToggle style={textStyle} nav caret>\r\n                            Menu\r\n                        </DropdownToggle>\r\n                        <DropdownMenu left>\r\n                            {isAdmin ? (\r\n                                <>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/person\">Persons</NavLink>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/device\">Devices</NavLink>\r\n                                    </DropdownItem>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/myDevice\">My Devices</NavLink>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem>\r\n                                        <NavLink href=\"/ws\">Statistics(WS)</NavLink>\r\n                                    </DropdownItem>\r\n                                </>\r\n                            )}\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                </Nav>\r\n                <Nav className=\"navbar-nav\">\r\n                    {/* Notification Bell Icon */}\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                        <DropdownToggle nav caret style={{ color: 'white' }}>\r\n                            <img\r\n                                src={chatIcon}\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                alt=\"Chat\"\r\n                                style={{ marginRight: '10px' }}\r\n                            />\r\n                            {messages.length > 0 && (\r\n                                <Badge color=\"danger\" pill>{messages.length}</Badge>\r\n                            )}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                            {messages.length > 0 ? (\r\n                                messages.map((notif, index) => (\r\n                                    <DropdownItem key={index} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                        <span>{notif}</span>\r\n                                        <Button\r\n                                            className={style.notifDeleteButton}\r\n                                            onClick={() => removeChat(index)}\r\n                                            \r\n                                        >\r\n                                            X\r\n                                        </Button>\r\n                                    </DropdownItem>\r\n                                ))\r\n                            ) : (\r\n                                <DropdownItem>No new chats</DropdownItem>\r\n                            )}\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                        <DropdownToggle nav caret style={{ color: 'white' }}>\r\n                            <img\r\n                                src={bellIcon}\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                alt=\"Notifications\"\r\n                                style={{ marginRight: '10px' }}\r\n                            />\r\n                            {notifications.length > 0 && (\r\n                                <Badge color=\"danger\" pill>{notifications.length}</Badge>\r\n                            )}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                            {notifications.length > 0 ? (\r\n                                notifications.map((notif, index) => (\r\n                                    <DropdownItem key={index} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                        <span>{notif}</span>\r\n                                        <Button\r\n                                            className={style.notifDeleteButton}\r\n                                            onClick={() => removeNotification(index)}\r\n                                            \r\n                                        >\r\n                                            X\r\n                                        </Button>\r\n                                    </DropdownItem>\r\n                                ))\r\n                            ) : (\r\n                                <DropdownItem>No new notifications</DropdownItem>\r\n                            )}\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n\r\n                    {isLoggedIn ? (\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <img\r\n                                    src={userIcon}\r\n                                    width=\"30\"\r\n                                    height=\"30\"\r\n                                    alt=\"User Icon\"\r\n                                    style={{ marginRight: '10px' }}\r\n                                />\r\n                                <span style={{ color: 'white' }}>\r\n                                    {userName} {isAdmin ? \"(Admin)\" : \"(Client)\"}\r\n                                </span>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem onClick={logOff}>\r\n                                    Log out\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    ) : (\r\n                        <Button color=\"secondary\" onClick={navigateToLogin} style={{ marginLeft: '10px' }}>\r\n                            Log In\r\n                        </Button>\r\n                    )}\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}