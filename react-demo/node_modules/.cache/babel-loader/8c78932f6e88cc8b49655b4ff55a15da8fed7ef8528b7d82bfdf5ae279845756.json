{"ast":null,"code":"import React,{useEffect,useState}from'react';import{getDeviceByPersonId}from'../my-device/api/my-device-api';import{DayPicker}from'react-day-picker';import'react-day-picker/dist/style.css';import{Client}from'@stomp/stompjs';import SockJS from'sockjs-client';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{format}from'date-fns';import styles from'./style/style.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const WebSocketComponent=()=>{const[devices,setDevices]=useState([]);const[selectedDevice,setSelectedDevice]=useState(null);const[selectedDate,setSelectedDate]=useState(new Date());const[stompClient,setStompClient]=useState(null);const[notifications,setNotifications]=useState([]);const[chartData,setChartData]=useState({labels:[],datasets:[{label:'Consumption',data:[],fill:false,borderColor:'rgb(75, 192, 192)',tension:0.1}]});const personId=sessionStorage.getItem('personId');useEffect(()=>{if(personId){getDeviceByPersonId(personId,(result,status,err)=>{if(result!==null&&status===200){setDevices(result);setSelectedDevice(result.at(0).id);}});}else{console.error('No person ID found in sessionStorage');}},[personId]);useEffect(()=>{if(personId){const socket=new SockJS('http://localhost:80/api-monitor/ws');const client=new Client({webSocketFactory:()=>socket,connectHeaders:{'personId':personId},onConnect:()=>{client.subscribe(`/topic/sendConsumption/${personId}`,message=>{setNotifications(prevNotifications=>[...prevNotifications,message.body]);updateChartData(message.body);});},onDisconnect:()=>console.log(\"Disconnected from WebSocket server\"),onStompError:frame=>console.error(\"WebSocket error:\",frame)});setStompClient(client);client.activate();}},[personId]);const handleDeviceChange=event=>{setSelectedDevice(event.target.value);};const handleDateChange=dateSelected=>{setSelectedDate(dateSelected);};const sendDataToWebSocket=()=>{selectedDate.setHours(2,0,0,0);if(stompClient&&stompClient.connected){const message={deviceId:selectedDevice,date:selectedDate.toISOString(),personId:personId};stompClient.publish({destination:'/app/sendConsumption',body:JSON.stringify(message)});console.log('--- Sent message: ',message);}};const updateChartData=messageBody=>{try{const data=JSON.parse(messageBody);const labels=[];const values=[];const hoursInDay=Array.from({length:24},(_,i)=>i.toString().padStart(2,'0'));// ['00', '01', ..., '23']\nconst dataMap={};// A map to store values by hour\n// Process data and store values by hour\ndata.forEach(item=>{const date=Object.keys(item)[0];const value=item[date];const correctDate=new Date(date);correctDate.setHours(correctDate.getHours()-2);// Adjusting timezone\nconst formattedDate=format(new Date(correctDate),'HH:mm');const hour=formattedDate.slice(0,2);// Extracting the hour part (e.g., '00', '01', etc.)\n// Store the value for each hour\ndataMap[hour]=value;});// Add all hours from 00 to 23 with their corresponding values\nhoursInDay.forEach(hour=>{labels.push(`${hour}:00`);values.push(dataMap[hour]||0);// If no data for the hour, default to 0\n});// Sort labels and values by hour\nconst sortedLabelsValues=labels.map((label,index)=>({label,value:values[index]})).sort((a,b)=>a.label.localeCompare(b.label));setChartData({labels:labels,datasets:[{label:'Consumption',data:values,fill:false,borderColor:'rgb(75, 192, 192)',tension:0.1}]});}catch(error){console.error(\"Error parsing message:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.pageContainer,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.header,children:\"Device and Date Selector\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.sideBySideContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.leftPanel,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.deviceSelector,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"deviceSelector\",className:styles.deviceLabel,children:\"Select Device:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"deviceSelector\",value:selectedDevice||'',onChange:handleDeviceChange,disabled:!devices.length,className:styles.select,children:devices.map(device=>/*#__PURE__*/_jsx(\"option\",{value:device.id,children:device.description},device.id))})]}),/*#__PURE__*/_jsx(DayPicker,{mode:\"single\",selected:selectedDate,onSelect:handleDateChange,className:styles.datePicker}),/*#__PURE__*/_jsx(\"button\",{onClick:sendDataToWebSocket,disabled:!selectedDate,className:styles.button,children:\"View Consumption\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.rightPanel,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Consumption Chart\"}),/*#__PURE__*/_jsx(Line,{data:chartData})]})]})]});};export default WebSocketComponent;","map":{"version":3,"names":["React","useEffect","useState","getDeviceByPersonId","DayPicker","Client","SockJS","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","format","styles","jsx","_jsx","jsxs","_jsxs","register","WebSocketComponent","devices","setDevices","selectedDevice","setSelectedDevice","selectedDate","setSelectedDate","Date","stompClient","setStompClient","notifications","setNotifications","chartData","setChartData","labels","datasets","label","data","fill","borderColor","tension","personId","sessionStorage","getItem","result","status","err","at","id","console","error","socket","client","webSocketFactory","connectHeaders","onConnect","subscribe","message","prevNotifications","body","updateChartData","onDisconnect","log","onStompError","frame","activate","handleDeviceChange","event","target","value","handleDateChange","dateSelected","sendDataToWebSocket","setHours","connected","deviceId","date","toISOString","publish","destination","JSON","stringify","messageBody","parse","values","hoursInDay","Array","from","length","_","i","toString","padStart","dataMap","forEach","item","Object","keys","correctDate","getHours","formattedDate","hour","slice","push","sortedLabelsValues","map","index","sort","a","b","localeCompare","className","pageContainer","children","header","sideBySideContainer","leftPanel","deviceSelector","htmlFor","deviceLabel","onChange","disabled","select","device","description","mode","selected","onSelect","datePicker","onClick","button","rightPanel"],"sources":["C:/Users/prico/OneDrive/Desktop/Faculta/SD/Assignment_3/react-demo/src/statistics/WebSocketComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getDeviceByPersonId } from '../my-device/api/my-device-api';\r\nimport { DayPicker } from 'react-day-picker';\r\nimport 'react-day-picker/dist/style.css';\r\nimport { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { format } from 'date-fns';\r\nimport styles from './style/style.module.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst WebSocketComponent = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [stompClient, setStompClient] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: 'Consumption',\r\n        data: [],\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const personId = sessionStorage.getItem('personId');\r\n\r\n  useEffect(() => {\r\n    if (personId) {\r\n      getDeviceByPersonId(personId, (result, status, err) => {\r\n        if (result !== null && status === 200) {\r\n          setDevices(result);\r\n          setSelectedDevice(result.at(0).id);\r\n        }\r\n      });\r\n    } else {\r\n      console.error('No person ID found in sessionStorage');\r\n    }\r\n  }, [personId]);\r\n\r\n  useEffect(() => {\r\n    if (personId) {\r\n      const socket = new SockJS('http://localhost:80/api-monitor/ws');\r\n      const client = new Client({\r\n        webSocketFactory: () => socket,\r\n        connectHeaders: { 'personId': personId },\r\n        onConnect: () => {\r\n          client.subscribe(`/topic/sendConsumption/${personId}`, (message) => {\r\n            setNotifications((prevNotifications) => [...prevNotifications, message.body]);\r\n            updateChartData(message.body);\r\n          });\r\n        },\r\n        onDisconnect: () => console.log(\"Disconnected from WebSocket server\"),\r\n        onStompError: (frame) => console.error(\"WebSocket error:\", frame),\r\n      });\r\n      setStompClient(client);\r\n      client.activate();\r\n    }\r\n  }, [personId]);\r\n\r\n  const handleDeviceChange = (event) => {\r\n    setSelectedDevice(event.target.value);\r\n  };\r\n\r\n  const handleDateChange = (dateSelected) => {\r\n    setSelectedDate(dateSelected);\r\n  };\r\n\r\n  const sendDataToWebSocket = () => {\r\n    selectedDate.setHours(2, 0, 0, 0);\r\n    if (stompClient && stompClient.connected) {\r\n      const message = {\r\n        deviceId: selectedDevice,\r\n        date: selectedDate.toISOString(),\r\n        personId: personId,\r\n      };\r\n      stompClient.publish({\r\n        destination: '/app/sendConsumption',\r\n        body: JSON.stringify(message),\r\n      });\r\n      console.log('--- Sent message: ', message)\r\n    }\r\n  };\r\n\r\n  const updateChartData = (messageBody) => {\r\n    try {\r\n      const data = JSON.parse(messageBody);\r\n      const labels = [];\r\n      const values = [];\r\n      const hoursInDay = Array.from({ length: 24 }, (_, i) => i.toString().padStart(2, '0')); // ['00', '01', ..., '23']\r\n      const dataMap = {}; // A map to store values by hour\r\n\r\n      // Process data and store values by hour\r\n      data.forEach(item => {\r\n        const date = Object.keys(item)[0];\r\n        const value = item[date];\r\n        const correctDate = new Date(date);\r\n        correctDate.setHours(correctDate.getHours() - 2); // Adjusting timezone\r\n        const formattedDate = format(new Date(correctDate), 'HH:mm');\r\n        const hour = formattedDate.slice(0, 2); // Extracting the hour part (e.g., '00', '01', etc.)\r\n\r\n        // Store the value for each hour\r\n        dataMap[hour] = value;\r\n      });\r\n\r\n      // Add all hours from 00 to 23 with their corresponding values\r\n      hoursInDay.forEach(hour => {\r\n        labels.push(`${hour}:00`);\r\n        values.push(dataMap[hour] || 0); // If no data for the hour, default to 0\r\n      });\r\n\r\n      // Sort labels and values by hour\r\n      const sortedLabelsValues = labels.map((label, index) => ({\r\n        label,\r\n        value: values[index]\r\n      })).sort((a, b) => a.label.localeCompare(b.label));\r\n\r\n      setChartData({\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: 'Consumption',\r\n            data: values,\r\n            fill: false,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1,\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error parsing message:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.pageContainer}>\r\n      <h2 className={styles.header}>Device and Date Selector</h2>\r\n      <div className={styles.sideBySideContainer}>\r\n        <div className={styles.leftPanel}>\r\n          <div className={styles.deviceSelector}>\r\n            <label htmlFor=\"deviceSelector\" className={styles.deviceLabel}>\r\n              Select Device:\r\n            </label>\r\n            <select\r\n              id=\"deviceSelector\"\r\n              value={selectedDevice || ''}\r\n              onChange={handleDeviceChange}\r\n              disabled={!devices.length}\r\n              className={styles.select}\r\n            >\r\n              {devices.map((device) => (\r\n                <option key={device.id} value={device.id}>\r\n                  {device.description}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <DayPicker\r\n            mode=\"single\"\r\n            selected={selectedDate}\r\n            onSelect={handleDateChange}\r\n            className={styles.datePicker}\r\n          />\r\n          <button onClick={sendDataToWebSocket} disabled={!selectedDate} className={styles.button}>\r\n            View Consumption\r\n          </button>\r\n          {/* <div className={styles.notifications}>\r\n            <h3>Notifications</h3>\r\n            {notifications.length > 0 ? (\r\n              notifications.map((notif, index) => (\r\n                <div key={index} className={styles.notification}>{notif}</div>\r\n              ))\r\n            ) : (\r\n              <p className={styles.noNotifications}>No notifications</p>\r\n            )}\r\n          </div> */}\r\n        </div>\r\n        <div className={styles.rightPanel}>\r\n          <h3>Consumption Chart</h3>\r\n          <Line data={chartData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}