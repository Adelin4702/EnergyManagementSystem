{"ast":null,"code":"import { TZDate } from \"@date-fns/tz\";\n/** Return the start month based on the props passed to DayPicker. */\nexport function getInitialMonth(props, dateLib) {\n  const {\n    month,\n    defaultMonth,\n    today = props.timeZone ? TZDate.tz(props.timeZone) : dateLib.Date ? new dateLib.Date() : new Date(),\n    numberOfMonths = 1,\n    endMonth,\n    startMonth\n  } = props;\n  let initialMonth = month || defaultMonth || today;\n  const {\n    differenceInCalendarMonths,\n    addMonths,\n    startOfMonth\n  } = dateLib;\n  // Fix the initialMonth if is after the to-date\n  if (endMonth && differenceInCalendarMonths(endMonth, initialMonth) < 0) {\n    const offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(endMonth, offset);\n  }\n  // Fix the initialMonth if is before the from-date\n  if (startMonth && differenceInCalendarMonths(initialMonth, startMonth) < 0) {\n    initialMonth = startMonth;\n  }\n  return startOfMonth(initialMonth);\n}","map":{"version":3,"names":["TZDate","getInitialMonth","props","dateLib","month","defaultMonth","today","timeZone","tz","Date","numberOfMonths","endMonth","startMonth","initialMonth","differenceInCalendarMonths","addMonths","startOfMonth","offset"],"sources":["C:\\Users\\prico\\OneDrive\\Desktop\\Faculta\\SD\\Assignment_3\\react-demo\\node_modules\\react-day-picker\\src\\helpers\\getInitialMonth.ts"],"sourcesContent":["import { TZDate } from \"@date-fns/tz\";\n\nimport { type DateLib } from \"../classes/DateLib.js\";\nimport { type DayPickerProps } from \"../types/props.js\";\n\n/** Return the start month based on the props passed to DayPicker. */\nexport function getInitialMonth(\n  props: Pick<\n    DayPickerProps,\n    | \"fromYear\"\n    | \"toYear\"\n    | \"startMonth\"\n    | \"endMonth\"\n    | \"month\"\n    | \"defaultMonth\"\n    | \"today\"\n    | \"numberOfMonths\"\n    | \"timeZone\"\n  >,\n  dateLib: DateLib\n): Date {\n  const {\n    month,\n    defaultMonth,\n    today = props.timeZone\n      ? TZDate.tz(props.timeZone)\n      : dateLib.Date\n        ? new dateLib.Date()\n        : new Date(),\n    numberOfMonths = 1,\n    endMonth,\n    startMonth\n  } = props;\n  let initialMonth = month || defaultMonth || today;\n  const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n\n  // Fix the initialMonth if is after the to-date\n  if (endMonth && differenceInCalendarMonths(endMonth, initialMonth) < 0) {\n    const offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(endMonth, offset);\n  }\n  // Fix the initialMonth if is before the from-date\n  if (startMonth && differenceInCalendarMonths(initialMonth, startMonth) < 0) {\n    initialMonth = startMonth;\n  }\n  return startOfMonth(initialMonth);\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AAKrC;AACA,OAAM,SAAUC,eAAeA,CAC7BC,KAWC,EACDC,OAAgB;EAEhB,MAAM;IACJC,KAAK;IACLC,YAAY;IACZC,KAAK,GAAGJ,KAAK,CAACK,QAAQ,GAClBP,MAAM,CAACQ,EAAE,CAACN,KAAK,CAACK,QAAQ,CAAC,GACzBJ,OAAO,CAACM,IAAI,GACV,IAAIN,OAAO,CAACM,IAAI,EAAE,GAClB,IAAIA,IAAI,EAAE;IAChBC,cAAc,GAAG,CAAC;IAClBC,QAAQ;IACRC;EAAU,CACX,GAAGV,KAAK;EACT,IAAIW,YAAY,GAAGT,KAAK,IAAIC,YAAY,IAAIC,KAAK;EACjD,MAAM;IAAEQ,0BAA0B;IAAEC,SAAS;IAAEC;EAAY,CAAE,GAAGb,OAAO;EAEvE;EACA,IAAIQ,QAAQ,IAAIG,0BAA0B,CAACH,QAAQ,EAAEE,YAAY,CAAC,GAAG,CAAC,EAAE;IACtE,MAAMI,MAAM,GAAG,CAAC,CAAC,IAAIP,cAAc,GAAG,CAAC,CAAC;IACxCG,YAAY,GAAGE,SAAS,CAACJ,QAAQ,EAAEM,MAAM,CAAC;EAC5C;EACA;EACA,IAAIL,UAAU,IAAIE,0BAA0B,CAACD,YAAY,EAAED,UAAU,CAAC,GAAG,CAAC,EAAE;IAC1EC,YAAY,GAAGD,UAAU;EAC3B;EACA,OAAOI,YAAY,CAACH,YAAY,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}