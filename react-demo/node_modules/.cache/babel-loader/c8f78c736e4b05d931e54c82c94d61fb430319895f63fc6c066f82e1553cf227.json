{"ast":null,"code":"import React from \"react\";\n/**\n * Render the gridcell of a day in the calendar and handle the interaction and\n * the focus with they day.\n *\n * If you need to just change the content of the day cell, consider swapping the\n * `DayDate` component instead.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Day(props) {\n  const {\n    day,\n    modifiers,\n    ...tdProps\n  } = props;\n  return React.createElement(\"td\", {\n    ...tdProps\n  });\n}","map":{"version":3,"names":["React","Day","props","day","modifiers","tdProps","createElement"],"sources":["C:\\Users\\prico\\OneDrive\\Desktop\\Faculta\\SD\\Assignment_3\\react-demo\\node_modules\\react-day-picker\\src\\components\\Day.tsx"],"sourcesContent":["import React from \"react\";\n\nimport type { CalendarDay } from \"../classes/index.js\";\nimport type { Modifiers } from \"../types/index.js\";\n\n/**\n * Render the gridcell of a day in the calendar and handle the interaction and\n * the focus with they day.\n *\n * If you need to just change the content of the day cell, consider swapping the\n * `DayDate` component instead.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Day(\n  props: {\n    /** The day to render. */\n    day: CalendarDay;\n    /** The modifiers to apply to the day. */\n    modifiers: Modifiers;\n  } & JSX.IntrinsicElements[\"td\"]\n) {\n  const { day, modifiers, ...tdProps } = props;\n  return <td {...tdProps} />;\n}\n\nexport type DayProps = Parameters<typeof Day>[0];\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAKzB;;;;;;;;;;AAUA,OAAM,SAAUC,GAAGA,CACjBC,KAK+B;EAE/B,MAAM;IAAEC,GAAG;IAAEC,SAAS;IAAE,GAAGC;EAAO,CAAE,GAAGH,KAAK;EAC5C,OAAOF,KAAA,CAAAM,aAAA;IAAA,GAAQD;EAAO,EAAI;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}