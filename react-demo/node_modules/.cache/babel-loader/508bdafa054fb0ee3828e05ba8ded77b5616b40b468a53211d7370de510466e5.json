{"ast":null,"code":"import { TZDate } from \"@date-fns/tz\";\nimport { DayFlag } from \"./UI.js\";\nimport { dateMatchModifiers } from \"./utils/dateMatchModifiers.js\";\n/**\n * Return a function to get the modifiers for a given day.\n *\n * NOTE: this is not an hook, but a factory for `getModifiers`.\n *\n * @private\n */\nexport function useGetModifiers(days, props, dateLib) {\n  const {\n    disabled,\n    hidden,\n    modifiers,\n    showOutsideDays,\n    broadcastCalendar,\n    today\n  } = props;\n  const {\n    isSameDay,\n    isSameMonth,\n    startOfMonth,\n    isBefore,\n    endOfMonth,\n    isAfter\n  } = dateLib;\n  const startMonth = props.startMonth && startOfMonth(props.startMonth);\n  const endMonth = props.endMonth && endOfMonth(props.endMonth);\n  const internalModifiersMap = {\n    [DayFlag.focused]: [],\n    [DayFlag.outside]: [],\n    [DayFlag.disabled]: [],\n    [DayFlag.hidden]: [],\n    [DayFlag.today]: []\n  };\n  const customModifiersMap = {};\n  for (const day of days) {\n    const {\n      date,\n      displayMonth\n    } = day;\n    const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n    const isBeforeStartMonth = Boolean(startMonth && isBefore(date, startMonth));\n    const isAfterEndMonth = Boolean(endMonth && isAfter(date, endMonth));\n    const isDisabled = Boolean(disabled && dateMatchModifiers(date, disabled, dateLib));\n    const isHidden = Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) || isBeforeStartMonth || isAfterEndMonth ||\n    // Broadcast calendar will show outside days as default\n    !broadcastCalendar && !showOutsideDays && isOutside || broadcastCalendar && showOutsideDays === false && isOutside;\n    const isToday = isSameDay(date, today ?? (props.timeZone ? TZDate.tz(props.timeZone) : dateLib.Date ? new dateLib.Date() : new Date()));\n    if (isOutside) internalModifiersMap.outside.push(day);\n    if (isDisabled) internalModifiersMap.disabled.push(day);\n    if (isHidden) internalModifiersMap.hidden.push(day);\n    if (isToday) internalModifiersMap.today.push(day);\n    // Add custom modifiers\n    if (modifiers) {\n      Object.keys(modifiers).forEach(name => {\n        const modifierValue = modifiers?.[name];\n        const isMatch = modifierValue ? dateMatchModifiers(date, modifierValue, dateLib) : false;\n        if (!isMatch) return;\n        if (customModifiersMap[name]) {\n          customModifiersMap[name].push(day);\n        } else {\n          customModifiersMap[name] = [day];\n        }\n      });\n    }\n  }\n  return day => {\n    // Initialize all the modifiers to false\n    const dayFlags = {\n      [DayFlag.focused]: false,\n      [DayFlag.disabled]: false,\n      [DayFlag.hidden]: false,\n      [DayFlag.outside]: false,\n      [DayFlag.today]: false\n    };\n    const customModifiers = {};\n    // Find the modifiers for the given day\n    for (const name in internalModifiersMap) {\n      const days = internalModifiersMap[name];\n      dayFlags[name] = days.some(d => d === day);\n    }\n    for (const name in customModifiersMap) {\n      customModifiers[name] = customModifiersMap[name].some(d => d === day);\n    }\n    return {\n      ...dayFlags,\n      // custom modifiers should override all the previous ones\n      ...customModifiers\n    };\n  };\n}","map":{"version":3,"names":["TZDate","DayFlag","dateMatchModifiers","useGetModifiers","days","props","dateLib","disabled","hidden","modifiers","showOutsideDays","broadcastCalendar","today","isSameDay","isSameMonth","startOfMonth","isBefore","endOfMonth","isAfter","startMonth","endMonth","internalModifiersMap","focused","outside","customModifiersMap","day","date","displayMonth","isOutside","Boolean","isBeforeStartMonth","isAfterEndMonth","isDisabled","isHidden","isToday","timeZone","tz","Date","push","Object","keys","forEach","name","modifierValue","isMatch","dayFlags","customModifiers","some","d"],"sources":["C:\\Users\\prico\\OneDrive\\Desktop\\Faculta\\SD\\Assignment_3\\react-demo\\node_modules\\react-day-picker\\src\\useGetModifiers.tsx"],"sourcesContent":["import { TZDate } from \"@date-fns/tz\";\n\nimport { DayFlag } from \"./UI.js\";\nimport type { CalendarDay, DateLib } from \"./classes/index.js\";\nimport type { DayPickerProps, Modifiers } from \"./types/index.js\";\nimport { dateMatchModifiers } from \"./utils/dateMatchModifiers.js\";\n\n/**\n * Return a function to get the modifiers for a given day.\n *\n * NOTE: this is not an hook, but a factory for `getModifiers`.\n *\n * @private\n */\nexport function useGetModifiers(\n  days: CalendarDay[],\n  props: DayPickerProps,\n  dateLib: DateLib\n) {\n  const {\n    disabled,\n    hidden,\n    modifiers,\n    showOutsideDays,\n    broadcastCalendar,\n    today\n  } = props;\n\n  const {\n    isSameDay,\n    isSameMonth,\n    startOfMonth,\n    isBefore,\n    endOfMonth,\n    isAfter\n  } = dateLib;\n\n  const startMonth = props.startMonth && startOfMonth(props.startMonth);\n  const endMonth = props.endMonth && endOfMonth(props.endMonth);\n\n  const internalModifiersMap: Record<DayFlag, CalendarDay[]> = {\n    [DayFlag.focused]: [],\n    [DayFlag.outside]: [],\n    [DayFlag.disabled]: [],\n    [DayFlag.hidden]: [],\n    [DayFlag.today]: []\n  };\n\n  const customModifiersMap: Record<string, CalendarDay[]> = {};\n\n  for (const day of days) {\n    const { date, displayMonth } = day;\n\n    const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n\n    const isBeforeStartMonth = Boolean(\n      startMonth && isBefore(date, startMonth)\n    );\n\n    const isAfterEndMonth = Boolean(endMonth && isAfter(date, endMonth));\n\n    const isDisabled = Boolean(\n      disabled && dateMatchModifiers(date, disabled, dateLib)\n    );\n\n    const isHidden =\n      Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) ||\n      isBeforeStartMonth ||\n      isAfterEndMonth ||\n      // Broadcast calendar will show outside days as default\n      (!broadcastCalendar && !showOutsideDays && isOutside) ||\n      (broadcastCalendar && showOutsideDays === false && isOutside);\n\n    const isToday = isSameDay(\n      date,\n      today ??\n        (props.timeZone\n          ? TZDate.tz(props.timeZone)\n          : dateLib.Date\n            ? new dateLib.Date()\n            : new Date())\n    );\n\n    if (isOutside) internalModifiersMap.outside.push(day);\n    if (isDisabled) internalModifiersMap.disabled.push(day);\n    if (isHidden) internalModifiersMap.hidden.push(day);\n    if (isToday) internalModifiersMap.today.push(day);\n\n    // Add custom modifiers\n    if (modifiers) {\n      Object.keys(modifiers).forEach((name) => {\n        const modifierValue = modifiers?.[name];\n        const isMatch = modifierValue\n          ? dateMatchModifiers(date, modifierValue, dateLib)\n          : false;\n        if (!isMatch) return;\n        if (customModifiersMap[name]) {\n          customModifiersMap[name].push(day);\n        } else {\n          customModifiersMap[name] = [day];\n        }\n      });\n    }\n  }\n\n  return (day: CalendarDay): Modifiers => {\n    // Initialize all the modifiers to false\n    const dayFlags: Record<DayFlag, boolean> = {\n      [DayFlag.focused]: false,\n      [DayFlag.disabled]: false,\n      [DayFlag.hidden]: false,\n      [DayFlag.outside]: false,\n      [DayFlag.today]: false\n    };\n    const customModifiers: Modifiers = {};\n\n    // Find the modifiers for the given day\n    for (const name in internalModifiersMap) {\n      const days = internalModifiersMap[name as DayFlag];\n      dayFlags[name as DayFlag] = days.some((d) => d === day);\n    }\n    for (const name in customModifiersMap) {\n      customModifiers[name] = customModifiersMap[name].some((d) => d === day);\n    }\n\n    return {\n      ...dayFlags,\n      // custom modifiers should override all the previous ones\n      ...customModifiers\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}