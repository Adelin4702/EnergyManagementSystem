{"ast":null,"code":"const minLengthValidator=(value,minLength)=>{return value.length>=minLength;};const requiredValidator=value=>{return value.trim()!=='';};const emailValidator=value=>{const re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return re.test(String(value).toLowerCase());};const validate=(value,rules)=>{let isValid=true;for(let rule in rules){switch(rule){case'minLength':isValid=isValid&&minLengthValidator(value,rules[rule]);break;case'isRequired':isValid=isValid&&requiredValidator(value);break;case'emailValidator':isValid=isValid&&emailValidator(value);break;default:isValid=true;}}return isValid;};export default validate;","map":{"version":3,"names":["minLengthValidator","value","minLength","length","requiredValidator","trim","emailValidator","re","test","String","toLowerCase","validate","rules","isValid","rule"],"sources":["C:/Users/prico/OneDrive/Desktop/Faculta/SD/Assignment_3/react-demo/src/login/components/validators/login-validators.js"],"sourcesContent":["\r\nconst minLengthValidator = (value, minLength) => {\r\n    return value.length >= minLength;\r\n};\r\n\r\nconst requiredValidator = value => {\r\n    return value.trim() !== '';\r\n};\r\n\r\nconst emailValidator = value => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(value).toLowerCase());\r\n};\r\n\r\nconst validate = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    for (let rule in rules) {\r\n\r\n        switch (rule) {\r\n            case 'minLength': isValid = isValid && minLengthValidator(value, rules[rule]);\r\n                              break;\r\n\r\n            case 'isRequired': isValid = isValid && requiredValidator(value);\r\n                               break;\r\n\r\n            case 'emailValidator': isValid = isValid && emailValidator(value);\r\n                                   break;\r\n\r\n            default: isValid = true;\r\n        }\r\n\r\n    }\r\n\r\n    return isValid;\r\n};\r\n\r\nexport default validate;\r\n"],"mappings":"AACA,KAAM,CAAAA,kBAAkB,CAAGA,CAACC,KAAK,CAAEC,SAAS,GAAK,CAC7C,MAAO,CAAAD,KAAK,CAACE,MAAM,EAAID,SAAS,CACpC,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAGH,KAAK,EAAI,CAC/B,MAAO,CAAAA,KAAK,CAACI,IAAI,CAAC,CAAC,GAAK,EAAE,CAC9B,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGL,KAAK,EAAI,CAC5B,KAAM,CAAAM,EAAE,CAAG,qJAAqJ,CAChK,MAAO,CAAAA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACR,KAAK,CAAC,CAACS,WAAW,CAAC,CAAC,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAGA,CAACV,KAAK,CAAEW,KAAK,GAAK,CAC/B,GAAI,CAAAC,OAAO,CAAG,IAAI,CAElB,IAAK,GAAI,CAAAC,IAAI,GAAI,CAAAF,KAAK,CAAE,CAEpB,OAAQE,IAAI,EACR,IAAK,WAAW,CAAED,OAAO,CAAGA,OAAO,EAAIb,kBAAkB,CAACC,KAAK,CAAEW,KAAK,CAACE,IAAI,CAAC,CAAC,CAC3D,MAElB,IAAK,YAAY,CAAED,OAAO,CAAGA,OAAO,EAAIT,iBAAiB,CAACH,KAAK,CAAC,CAC7C,MAEnB,IAAK,gBAAgB,CAAEY,OAAO,CAAGA,OAAO,EAAIP,cAAc,CAACL,KAAK,CAAC,CAC1C,MAEvB,QAASY,OAAO,CAAG,IAAI,CAC3B,CAEJ,CAEA,MAAO,CAAAA,OAAO,CAClB,CAAC,CAED,cAAe,CAAAF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}