{"ast":null,"code":"import React from'react';import APIResponseErrorMessage from\"../commons/errorhandling/api-response-error-message\";import{Button,Card,CardHeader,Col,Modal,ModalBody,ModalHeader,Row}from'reactstrap';import PersonForm from\"./components/person-form\";import*as API_USERS from\"./api/person-api\";import PersonTable from\"./components/person-table\";import styles from'./style/style.module.css';// Import CSS module\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class PersonContainer extends React.Component{constructor(props){super(props);this.toggleForm=this.toggleForm.bind(this);this.reload=this.reload.bind(this);this.selectPerson=this.selectPerson.bind(this);this.state={selected:false,tableData:[],isLoaded:false,errorStatus:0,error:null,personToUpdate:null// Store selected person for updating\n};}componentDidMount(){this.fetchPersons();}fetchPersons(){return API_USERS.getPersons((result,status,err)=>{if(result!==null&&status===200){this.setState({tableData:result,isLoaded:true});}else{this.setState({errorStatus:status,error:err});}});}toggleForm(){this.setState({selected:!this.state.selected,personToUpdate:null});}reload(){this.setState({isLoaded:false});this.fetchPersons();this.setState({selected:false});}selectPerson(person){this.setState({personToUpdate:person,selected:true});}render(){return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(Card,{className:styles.card,children:[/*#__PURE__*/_jsx(CardHeader,{className:styles.cardHeader,children:/*#__PURE__*/_jsx(\"strong\",{children:\"Person Management\"})}),/*#__PURE__*/_jsx(Row,{className:styles.row,children:/*#__PURE__*/_jsx(Col,{sm:{size:'8',offset:1},children:/*#__PURE__*/_jsx(Button,{className:styles.addButton,onClick:this.toggleForm,children:\"Add Person\"})})}),/*#__PURE__*/_jsx(Row,{className:styles.row,children:/*#__PURE__*/_jsxs(Col,{sm:{size:'8',offset:1},children:[this.state.isLoaded&&/*#__PURE__*/_jsx(\"div\",{className:styles.tableContainer,children:/*#__PURE__*/_jsx(PersonTable,{tableData:this.state.tableData,onPersonSelect:this.selectPerson})}),this.state.errorStatus>0&&/*#__PURE__*/_jsx(\"div\",{className:styles.errorMessage,children:/*#__PURE__*/_jsx(APIResponseErrorMessage,{errorStatus:this.state.errorStatus,error:this.state.error})})]})})]}),/*#__PURE__*/_jsxs(Modal,{isOpen:this.state.selected,toggle:this.toggleForm,size:\"lg\",children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:this.toggleForm,className:styles.modalHeader,children:this.state.personToUpdate?\"Update Person\":\"Add Person\"}),/*#__PURE__*/_jsx(ModalBody,{className:styles.modalBody,children:/*#__PURE__*/_jsx(PersonForm,{reloadHandler:this.reload,person:this.state.personToUpdate})})]})]});}}export default PersonContainer;","map":{"version":3,"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","PersonForm","API_USERS","PersonTable","styles","jsx","_jsx","jsxs","_jsxs","PersonContainer","Component","constructor","props","toggleForm","bind","reload","selectPerson","state","selected","tableData","isLoaded","errorStatus","error","personToUpdate","componentDidMount","fetchPersons","getPersons","result","status","err","setState","person","render","className","container","children","card","cardHeader","row","sm","size","offset","addButton","onClick","tableContainer","onPersonSelect","errorMessage","isOpen","toggle","modalHeader","modalBody","reloadHandler"],"sources":["C:/Users/prico/OneDrive/Desktop/Faculta/SD/Assignment_3/react-demo/src/person/person-container.js"],"sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\r\nimport PersonForm from \"./components/person-form\";\r\nimport * as API_USERS from \"./api/person-api\";\r\nimport PersonTable from \"./components/person-table\";\r\nimport styles from './style/style.module.css'; // Import CSS module\r\n\r\nclass PersonContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n        this.selectPerson = this.selectPerson.bind(this);\r\n        this.state = {\r\n            selected: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null,\r\n            personToUpdate: null // Store selected person for updating\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPersons();\r\n    }\r\n\r\n    fetchPersons() {\r\n        return API_USERS.getPersons((result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                this.setState({\r\n                    tableData: result,\r\n                    isLoaded: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errorStatus: status,\r\n                    error: err\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({ selected: !this.state.selected, personToUpdate: null });\r\n    }\r\n\r\n    reload() {\r\n        this.setState({ isLoaded: false });\r\n        this.fetchPersons();\r\n        this.setState({ selected: false });\r\n    }\r\n\r\n    selectPerson(person) {\r\n        this.setState({ personToUpdate: person, selected: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <Card className={styles.card}>\r\n                    <CardHeader className={styles.cardHeader}>\r\n                        <strong>Person Management</strong>\r\n                    </CardHeader>\r\n                    <Row className={styles.row}>\r\n                        <Col sm={{ size: '8', offset: 1 }}>\r\n                            <Button \r\n                                className={styles.addButton}\r\n                                onClick={this.toggleForm}\r\n                            >\r\n                                Add Person\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={styles.row}>\r\n                        <Col sm={{ size: '8', offset: 1 }}>\r\n                            {this.state.isLoaded && (\r\n                                <div className={styles.tableContainer}>\r\n                                    <PersonTable\r\n                                        tableData={this.state.tableData}\r\n                                        onPersonSelect={this.selectPerson}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            {this.state.errorStatus > 0 && (\r\n                                <div className={styles.errorMessage}>\r\n                                    <APIResponseErrorMessage\r\n                                        errorStatus={this.state.errorStatus}\r\n                                        error={this.state.error}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n                <Modal isOpen={this.state.selected} toggle={this.toggleForm} size=\"lg\">\r\n                    <ModalHeader toggle={this.toggleForm} className={styles.modalHeader}>\r\n                        {this.state.personToUpdate ? \"Update Person\" : \"Add Person\"}\r\n                    </ModalHeader>\r\n                    <ModalBody className={styles.modalBody}>\r\n                        <PersonForm\r\n                            reloadHandler={this.reload}\r\n                            person={this.state.personToUpdate}\r\n                        />\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}